---
title: "BIMM 143 Lab 09"
author: "Patric Young"
format: pdf
editor: visual
---

# What is in the PDB anyways?

The main database of biomolecular structures is called the PDB and is available at www.rcsb.org.

Lets begin by seeing what is in this database.

```{r}
pdbstats <- read.csv("PDB.csv", row.names = 1)
head(pdbstats)
```

**Q1:** What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

X-ray: 85.9%

Electron Microscopy: 7.02%

92.92%

```{r}
as.numeric("1000") + 1
as.numeric(pdbstats$X.ray)
```

```{r}
gsub(",", "", pdbstats$X.ray)
as.numeric (gsub(",", "", pdbstats$X.ray))
```

```{r}
n.xray <- sum( as.numeric(gsub(",", "", pdbstats$X.ray)))
n.em <- sum( as.numeric(gsub(",", "", pdbstats$EM)))
n.total <- sum( as.numeric(gsub(",", "", pdbstats$Total)))
```

```{r}
p.xray <- (n.xray/n.total)*100
p.em <- (n.em/n.total)*100
```

```{r}
round(p.xray,3)
round(p.em,2)
```

There are `r n.xray` protein structures and (`r round(p.xray,2)`%) and `r n.em` (`r round(p.em,2)`%) Em structures in the current PDB database.

**Q2:** What proportion of structures in the PDB are protein?

```{r}
as.numeric(gsub(",", "", pdbstats$Total))/ n.total *100
```

86.89% of structures in the PDB are protein.

**Q3:** Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

It is not straightforward to find all HIV-1 protease structures using pain text searching on the database.

A wee pic of HIV-1 Protease from Molstar.

![A caption](1HSG.png)

**Q4**: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

The resolution is at 2.00 Angstroms. In this resolution, only Oxygen atoms are visible. The resolution would have to be under 1.00 Angstrom in order to see the Hydrogen atoms.

## Working with structure data in R

we will use the `bio3d` package for this:

```{r}
library(bio3d)
```

Read a PDB file from the online database

```{r}
pdb <- read.pdb("1hsg")
pdb
```

```{r}
head(pdb$atom)
```

What is the first residue 3 letter code and a 1 letter code?

```{r}
pdb$atom$resid[1]
aa321(pdb$atom$resid[1])
```

## Predicting functional motions of a single structure

Let's read a new PDB structure of Adenylate Kinase (PDB code: 6s36) and perform Normal mode analysis.

```{r}
adk <- read.pdb("6s36")
pdb
```

```{r}
adk <- read.pdb("6s36")
adk
```

Normal mode analysis (NMA) is a structural bioinformatics method to predict protein flexibility and potential functional motions (a.k.a. conformational changes).

```{r}
m <- nma(adk)
```

```{r}
plot(m)
```

```{r}
mktrj(m, file="adk_m7.pdb")
```

# Section 4. Comparative Structure Analysis

Today we are continuing where we left off, building towards completing the loop from bio molecular structural data to our new analysis methods like PCA and clustering.

We begin with getting a single protein sequence for a protein family of interest.

```{r}
library(bio3d)
aa <- get.seq("1ake_A")
aa
```

```{r}
#b <- blast.pdb(aa)
```

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
```

A summary plot of our BLAST results

I could save and load my blast results next time so i don't need to run the search every time.

Next time, I can just run:

```{r}
#saveRDS(b, file="blast_results.RDS")
```

```{r}
b <- readRDS("blast_results.RDS")
```

```{r}
hits <- plot(b)
```

```{r}
hits$pdb.id
```

```{r}
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

Next we are going to align and superpose all these structures.

```{r}
# Align releated PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```

```{r}
pdbs$xyz
```

```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)



```

```{r}
anno <- pdb.annotate(ids)
unique(anno$source)
head(anno)
```

# Time for PCA

We will not use the `prcomp()` function from the base R but instead the `pca()` function from the `bio3d` package as this one is designed to work nicely with bio molecular data.

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)
```

Function `rmsd()` will calculate all pairwise RMSD values of the structural ensemble. This facilitates clustering analysis based on the pairwise structural deviation:

```{r}
# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```

To visualize the major structural variations in the ensemble the function mktrj() can be used to generate a trajectory PDB file by interpolating along a give PC (eigenvector):

```{r}
# Visualize first principal component
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```

We can now open this trajectory file "pc_1.pdb" in mol\* to view a wee movie of the major differences

## We can also plot our main PCA results with **ggplot**

```{r}
#Plotting results with ggplot2
library(ggplot2)
library(ggrepel)

df <- data.frame(PC1=pc.xray$z[,1], 
                 PC2=pc.xray$z[,2], 
                 col=as.factor(grps.rd),
                 ids=ids)

p <- ggplot(df) + 
  aes(PC1, PC2, col=col, label=ids) +
  geom_point(size=2) +
  geom_text_repel(max.overlaps = 20) +
  theme(legend.position = "none")
p
```

# Normal mode analysis

```{r}
# NMA of all structures
modes <- nma(pdbs)
plot(modes, pdbs, col=grps.rd)
```
